name: Tests

on:
  pull_request:
    branches:
      - main
      - dev
    paths-ignore:
      - "*.md"
      - Dockerfile
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - "*.md"
      - Dockerfile

jobs:
  Download:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Cache Ctbert
        id: cache-ctbert
        uses: actions/cache@v3
        with:
          path: downloads
          key: ctbert-model-cache-${{ hashFiles('CTBERTHASH') }}
          restore-keys: |
            ctbert-model-cache-

      # Both have ctbert and bert files
      - name: Download Ctbert From HuggingFace
        if: steps.cache-ctbert.outputs.cache-hit != 'true'
        run: |
          mkdir -p downloads
          cd downloads
          git clone https://huggingface.co/zTaoPlus/ctbert ckpt
  
  Testing:
    env:
      PYTHONDEVMODE: 1
    runs-on: ${{ matrix.os }}
    needs: [Download]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        os: [ubuntu-latest, windows-latest]
        install-via: [pip]
        arch: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache-ctbert
        with:
          path: downloads
          key: ctbert-model-cache-${{ hashFiles('CTBERTHASH') }}
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Set Variables
        id: set_variables
        shell: bash
        run: |
          echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_OUTPUT
          echo "PIP_CACHE=$(pip cache dir)" >> $GITHUB_OUTPUT
          echo "BERT_LAYERS_PATH=$(python -c 'from pathlib import Path; print(Path(Path.cwd(),"downloads","ckpt","bert"))')" >> $GITHUB_OUTPUT
      - name: Cache PIP
        uses: actions/cache@v3
        with:
          path: ${{ steps.set_variables.outputs.PIP_CACHE }}
          key: ${{ runner.os }}-pip-${{ steps.set_variables.outputs.PY }}
      - name: Cache venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.python-version }}-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.python-version }}-
      - name: Run Python
        env:
          BERT_LAYERS_PATH: ${{ steps.set_variables.outputs.BERT_LAYERS_PATH }}
        run: python -c 'import os; print(os.getenv("BERT_LAYERS_PATH"))'